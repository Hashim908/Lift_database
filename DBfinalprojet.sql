DROP TABLE Feedback CASCADE CONSTRAINTS;
DROP TABLE Payment CASCADE CONSTRAINTS;
DROP TABLE Promotion CASCADE CONSTRAINTS;
DROP TABLE Ride CASCADE CONSTRAINTS;
DROP TABLE Vehicle CASCADE CONSTRAINTS;
DROP TABLE Passenger CASCADE CONSTRAINTS;
DROP TABLE Driver CASCADE CONSTRAINTS;
DROP TABLE Users CASCADE CONSTRAINTS;

CREATE TABLE Users (
    UserID INT PRIMARY KEY, --GENERATES UNIQUE PRIMARY KEY TO ENSURE EACH ROW INSERTED IS DINTINCT 
    Name VARCHAR2(100) NOT NULL,  --ENSURING THIS ATTRIBUTE IS NOT LEFT EMPTY 
    PhoneNumber VARCHAR2(15) UNIQUE NOT NULL,  --ENSURING THIS ATTRIBUTE IS NOT LEFT EMPTY AND EACH PHONE NUMBER IS LINKED TO ONE USER ITS VARCHAR(15) BECAUSE SOME USERS MIGHT HAVE AN INTERNATIONAL NUMBER 
    Email VARCHAR2(50) UNIQUE NOT NULL,  --ENSURING THIS ATTRIBUTE IS NOT LEFT EMPTY AND EACH EMAIL IS LINKED TO ONE USER
    Password VARCHAR2(50) NOT NULL,
    RegistrationDate DATE NOT NULL
);

CREATE TABLE Passenger (
    PassengerID VARCHAR2(15) PRIMARY KEY,
    PreferredPaymentMethod VARCHAR2(50),
    LoyaltyPoints INT,-- THESE P\POINTS COULD BE USED FOR PROMOTION 
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) 
);

CREATE TABLE Vehicle (
    VehicleID INT PRIMARY KEY ,
    LicensePlate VARCHAR2(10) UNIQUE NOT NULL,
    Type VARCHAR2(50) NOT NULL, -- WHICH TYPE OF IS THE DRIVER IN (ie sedan,SUV, )
    Capacity INT NOT NULL, -- HOW MANY PEOPLE CAN SIT IN THE CAR AT A GIVEN TIME 
    MaintenanceDate DATE, -- WHEN IS THE CAR MAINTAINANCE DUE 
    InsurancePolicy INT   -- WHEN IS THE INSURAMCE DUE 
);

CREATE TABLE Driver (
    DriverID VARCHAR2(15) PRIMARY KEY,
    LicenseNumber VARCHAR2(50) UNIQUE NOT NULL,
    AverageRating NUMBER(2,1),
    ActiveStatus VARCHAR2(8),-- COULD EITHER BE ACTIVE OR INACTIVE 
    YearsOfExperience INT,
    UserID INT,
    VehicleID INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID)
);

CREATE TABLE Promotion(
    PromoID INT PRIMARY KEY,
    PromoCode VARCHAR2(20) UNIQUE NOT NULL,
    Description VARCHAR2(250),
    DiscountType VARCHAR2(10) NOT NULL, -- THIS ATTRIVUTE SPECIFIES WEATHER THE DISCOUNT TYPE IS A FIXED AMOUNT OR A PERCENTAGE
    DiscountValue NUMBER(5,2) NOT NULL,
    StartDate DATE NOT NULL, 
    EndDate DATE NOT NULL,
    MaxUsage INT NOT NULL
);

CREATE TABLE Ride (
    RideID INT PRIMARY KEY ,
    PickupLocation VARCHAR2(250) NOT NULL,
    DropoffLocation VARCHAR2(250) NOT NULL,
    Fare NUMBER(5,2) NOT NULL,
    Status VARCHAR2(20) NOT NULL,-- IS THE RIDE ONGOING, COMPLETED OR CANCELLED 
    StartTime TIMESTAMP,
    EndTime TIMESTAMP,
    Distance NUMBER(10,2),
    PassengerID VARCHAR2(15) NOT NULL,
    PromoID INT,
    DriverID VARCHAR2(15) NOT NULL,
    VehicleID INT NOT NULL,
    FOREIGN KEY (PassengerID) REFERENCES Passenger(PassengerID),
    FOREIGN KEY (PromoID) REFERENCES Promotion(PromoID),
    FOREIGN KEY (DriverID) REFERENCES Driver(DriverID),
    FOREIGN KEY (VehicleID) REFERENCES Vehicle(VehicleID) 
);

CREATE TABLE Payment (
    PaymentID INT PRIMARY KEY ,
    Amount NUMBER(5,2) NOT NULL,
    PaymentMethod VARCHAR2(50) NOT NULL ,-- PAYMENT METHOTD COULD EITHER BE CASH,EWALLET,DEBITCARD OR CRDITCARD
    PaymentStatus VARCHAR2(20) NOT NULL, -- e.g., 'Completed', 'Pending'
    PaymentTimestamp TIMESTAMP,
    RideID INT ,
    PassengerID VARCHAR2(15),
    PromoID INT,
    FOREIGN KEY (RideID) REFERENCES Ride(RideID) ,
    FOREIGN KEY (PassengerID) REFERENCES Passenger(PassengerID) ,
    FOREIGN KEY (PromoID) REFERENCES Promotion(PromoID)
);

CREATE TABLE Feedback (
    FeedbackID INT PRIMARY KEY,
    Rating NUMBER(2,1) NOT NULL,
    Description VARCHAR2(250),
    TimeStamp TIMESTAMP,
    RideID INT,
    DriverID VARCHAR2(15),
    PassengerID VARCHAR2(15),
    FOREIGN KEY (RideID) REFERENCES Ride(RideID),
    FOREIGN KEY (DriverID) REFERENCES Driver(DriverID),
    FOREIGN KEY (PassengerID) REFERENCES Passenger(PassengerID)
);









